// <auto-generated />
using System;
using EntityConfigurations;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EntityConfigurations.Migrations
{
    [DbContext(typeof(DemoDbContext))]
    partial class DemoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EntityConfigurations.Entities.Holiday", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateOnly>("HolidayDate")
                        .HasColumnType("date");

                    b.Property<string>("HolidayName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Holidays");
                });

            modelBuilder.Entity("EntityConfigurations.Entities.LocationHoliday", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateOnly>("CustomDate")
                        .HasColumnType("date");

                    b.Property<Guid>("HolidayId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("LocationId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("HolidayId");

                    b.HasIndex("LocationId");

                    b.ToTable("LocationHolidays");
                });

            modelBuilder.Entity("EntityConfigurations.Entities.MerchantLocation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("MerchantLocations");
                });

            modelBuilder.Entity("EntityConfigurations.Entities.LocationHoliday", b =>
                {
                    b.HasOne("EntityConfigurations.Entities.Holiday", "Holiday")
                        .WithMany("LocationHolidays")
                        .HasForeignKey("HolidayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntityConfigurations.Entities.MerchantLocation", "Location")
                        .WithMany("LocationHolidays")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Holiday");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("EntityConfigurations.Entities.Holiday", b =>
                {
                    b.Navigation("LocationHolidays");
                });

            modelBuilder.Entity("EntityConfigurations.Entities.MerchantLocation", b =>
                {
                    b.Navigation("LocationHolidays");
                });
#pragma warning restore 612, 618
        }
    }
}
